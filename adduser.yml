---
- name: Add user & access
  hosts: all
  tasks:
    - name: Apply apt upgrade
      become: true
      ansible.builtin.apt:
        update_cache: true
        upgrade: true
        cache_valid_time: 0
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Create tf2 group
      become: true
      ansible.builtin.group:
        name: tf2
        state: present

    - name: Create tf2server user
      become: true
      ansible.builtin.user:
        name: tf2server
        comment: TF2 Server User
        group: tf2
        shell: /bin/bash
        create_home: true
        state: present

    - name: Generate sudoers.d
      become: true
      ansible.builtin.copy:
        dest: /etc/sudoers.d/devops
        content: "%tf2  ALL=(ALL)  NOPASSWD: ALL"
        mode: "0600"

    - name: Enable ufw allow 22
      become: true
      community.general.ufw:
        rule: allow
        port: "22"
        proto: tcp
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Enable ufw limit 22
      become: true
      community.general.ufw:
        comment: TF2 Ansible
        rule: limit
        port: "22"
        proto: tcp
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Enable ufw
      become: true
      community.general.ufw:
        state: enabled
        policy: deny
        direction: incoming
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Create ssh keys
      become: true
      ansible.posix.authorized_key:
        user: tf2server
        state: present
        key: "{{ item }}"
      loop: "{{ ssh_keys }}"

    - name: Disable PasswordAuthentication
      become: true
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: ^PasswordAuthentication
        line: PasswordAuthentication no
        state: present
        backup: true

    - name: Restart ssh
      become: true
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: ^PermitRootLogin
        line: PermitRootLogin no
        state: present
        backup: true
      notify:
        - restart ssh

  handlers:
    - name: Restart ssh
      become: true
      ansible.builtin.service:
        name: sshd
        state: restarted
