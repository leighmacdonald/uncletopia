---
- name: Set timezone
  become: true
  community.general.timezone:
    name: "{{ timezone }}"

- name: Install gpg
  become: true
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 0
    state: present
    pkg:
      - gpg

- name: Download docker gpg key
  become: true
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add specified repository into sources list
  become: true
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Install OS Dependencies
  become: true
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 0
    state: present
    pkg:
      - wget
      - unzip
      - apt-transport-https
      - ca-certificates
      - gpg
      - curl
      - gnupg
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - python3-docker
      - python3-distutils

- name: Add docker group to user
  become: true
  ansible.builtin.user:
    name: tf2server
    groups: docker
    append: true
    state: present

- name: Reload systemd daemon
  become: true
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable docker service
  become: true
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Increase available memory for UDP receive buffers
  become: true
  ansible.posix.sysctl:
    name: net.core.rmem_max
    value: "26214400"
    sysctl_set: true
    reload: true

- name: Increase available memory for UDP send buffers
  become: true
  ansible.posix.sysctl:
    name: net.core.wmem_max
    value: "26214400"
    sysctl_set: true
    reload: true

- name: Increase the maximum amount of packets in the kernel queue
  become: true
  ansible.posix.sysctl:
    name: net.core.netdev_max_backlog
    value: "25000"
    sysctl_set: true
    reload: true

- name: Enable UFW
  become: true
  ansible.builtin.ufw:
    state: reloaded
    policy: deny
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
