---
- name: Create gbans_postgres_data volume
  community.docker.docker_volume:
    name: gbans_db
    state: present

- name: Create build dir
  ansible.builtin.file:
    path: "build/postgres"
    state: directory
    mode: '0755'

- name: Copy postgres build
  ansible.builtin.copy:
    src: "postgres-ip4r.Dockerfile"
    dest: "build/postgres/Dockerfile"
    mode: "0755"

- name: Build postgres image
  community.docker.docker_image:
    build:
      path: "build/postgres"
    name: postgres-gbans
    tag: latest
    source: build

- name: Create gbans-postgres container
  community.docker.docker_container:
    name: gbans-postgres
    image: postgres-gbans:latest
    restart: true
    recreate: true
    pull: false
    comparisons:
      networks: strict
    networks:
      - name: caddy_net
    restart_policy: unless-stopped
    shm_size: 8g
    volumes:
      - gbans_db:/var/lib/postgresql/data
    env:
      POSTGRES_DB: gbans
      POSTGRES_PASSWORD: gbans
      POSTGRES_USER: gbans
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - 127.0.0.1:5432:5432
      - "{{ metrics_hostname_ip }}:5432:5432"
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    command: [
      "postgres",
      # md5 is unfortunately required because sourcemod uses pg 9.6 which does not support scram encryption type
      "-c", "password_encryption=md5",
      "-c", "max_connections=125",
      "-c", "shared_buffers=1GB",
      # "-c", "effective_cache_size=6GB",
      # "-c", "maintenance_work_mem=2GB",
      "-c", "checkpoint_completion_target=0.9",
      "-c", "wal_buffers=16MB",
      "-c", "default_statistics_target=100",
      "-c", "random_page_cost=1.1",
      "-c", "effective_io_concurrency=200",
      "-c", "work_mem=10485kB",
      # "-c", "min_wal_size=1GB",
      # "-c", "max_wal_size=4GB",
      "-c", "max_worker_processes=8",
      "-c", "max_parallel_workers_per_gather=4",
      "-c", "max_parallel_workers=8",
      "-c", "max_parallel_maintenance_workers=4"
    ]

- name: Create gbans-postgres_exporter container (gbans)
  community.docker.docker_container:
    name: gbans-postgres_exporter
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    restart_policy: unless-stopped
    comparisons:
      networks: strict
    networks:
      - name: caddy_net
    pull: true
    env:
      DATA_SOURCE_NAME: postgresql://gbans:gbans@gbans-postgres/gbans?sslmode=disable
    ports:
      - 127.0.0.1:9187:9187
