---
- name: Apply apt upgrade
  become: true
  ansible.builtin.apt:
    update_cache: true
    upgrade: true
    cache_valid_time: 0
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Create tf2 group
  become: true
  ansible.builtin.group:
    name: tf2
    state: present

- name: Create tf2server user
  become: true
  ansible.builtin.user:
    name: tf2server
    comment: TF2 Server User
    group: tf2
    shell: /bin/bash
    create_home: true
    state: present

- name: sudoers.d
  become: true
  ansible.builtin.copy:
    dest: /etc/sudoers.d/devops
    content: "%tf2  ALL=(ALL)  NOPASSWD: ALL"
    mode: 0600

- name: ufw allow 22
  become: true
  ansible.builtin.ufw:
    rule: allow
    port: "22"
    proto: tcp
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: ufw limit 22
  become: true
  ansible.builtin.ufw:
    comment: TF2 Ansible
    rule: limit
    port: "22"
    proto: tcp
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: ufw enable
  become: true
  ansible.builtin.ufw:
    state: enabled
    policy: deny
    direction: incoming
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: mkdir .ssh
  ansible.builtin.file:
    path: ~/.ssh
    state: directory
    mode: "0700"

- name: ssh keys
  ansible.posix.authorized_key:
    user: tf2server
    state: present
    key: "{{ item }}"
  loop: "{{ ssh_keys }}"

- name: etc/ssh/sshd_config
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^PasswordAuthentication
    line: PasswordAuthentication no
    state: present
    backup: true

- name: systemctl restart ssh
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^PermitRootLogin
    line: PermitRootLogin no
    state: present
    backup: true
  notify:
    - restart ssh
